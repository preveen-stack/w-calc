# Process this file with autoconf to produce a configure script.
AC_PREREQ(2.50)
AC_INIT(wcalc, 2.4.1, kyle-wcalc@memoryhole.net)
AM_INIT_AUTOMAKE([foreign dist-bzip2 no-define 1.7])
AC_CONFIG_SRCDIR([WcalcController.h])
AM_CONFIG_HEADER(config.h)
# If Automake supports silent rules, enable them
m4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])

# Checks for programs.
AC_PROG_YACC
AC_PROG_CC
AM_PROG_LEX
AS_IF([test "x$LEX" == x],
	  [AC_MSG_ERROR([A Lex/Flex program is required in order to compile wcalc.])],
	  [AS_IF([test "x$LEX" != xflex],
			 [LEX="$SHELL $missing_dir/missing flex"
			  AC_SUBST([LEX_OUTPUT_ROOT], [lex.yy])
			  AC_SUBST([LEXLIB], [''])]
			 )]
	  )
AC_PROG_INSTALL

# Checks for libraries.
AC_CHECK_LIB([m], [acos])
# FIXME: Replace `main' with a function in `-lreadline':
AC_ARG_WITH([readline],
			[AS_HELP_STRING([--without-readline],
							[do not try to find and use the readline library])],
			[nc_cv_readline=$withval],
			[nc_cv_readline=yes])
AS_IF([test "x$nc_cv_readline" = xyes],
	  [VL_LIB_READLINE])

#==========================================================================================
# GMP
#==========================================================================================
AC_ARG_WITH([gmp],
			[AS_HELP_STRING([--with-gmp=[[PATH]]],
							[specify the path to the gmp library])],
			[GMP_CPPFLAGS="-I$with_gmp/include"
			 GMP_LDFLAGS="-L$with_gmp/lib"])
GMP_saved_CPPFLAGS="$CPPFLAGS"
GMP_saved_LDFLAGS="$LDFLAGS"
CPPFLAGS="$GMP_CPPFLAGS $CPPFLAGS"
LDFLAGS="$GMP_LDFLAGS $LDFLAGS"
AC_CHECK_LIB([gmp], [__gmpz_init], [],
			 [AC_CHECK_LIB([gmp], [mpz_init], [],
						   [AC_CHECK_LIB([gmp2], [mpz_init])])])
CPPFLAGS="$GMP_saved_CPPFLAGS"
LDFLAGS="$GMP_saved_LDFLAGS"
AC_SUBST(GMP_CPPFLAGS)
AC_SUBST(GMP_LDFLAGS)

#==========================================================================================
# MPFR
#==========================================================================================
AC_ARG_WITH([mpfr],
			[AS_HELP_STRING([--with-mpfr=[[PATH]]],
							[specify the path to the mpfr library])],
			[MPFR_CPPFLAGS="-I$with_mpfr/include"
			 MPFR_LDFLAGS="-L$with_mpfr/lib"])
MPFR_saved_CPPFLAGS="$CPPFLAGS"
MPFR_saved_LDFLAGS="$LDFLAGS"
CPPFLAGS="$MPFR_CPPFLAGS $CPPFLAGS"
LDFLAGS="$MPFR_LDFLAGS $LDFLAGS"
AC_SEARCH_LIBS([mpfr_free_str], [mpfr],
			   [AC_DEFINE([HAVE_LIBMPFR], [1], [Have libmpfr])],
			   [AC_MSG_ERROR([Need MPFR 2.1.x or better. see http://www.mpfr.org])])
AC_CHECK_FUNC([mpfr_sec],
			  [AC_DEFINE([HAVE_MPFR_22], [1], [MPFR version 2.2 or better])])
CPPFLAGS="$MPFR_saved_CPPFLAGS"
LDFLAGS="$MPFR_saved_LDFLAGS"
AC_SUBST(MPFR_CPPFLAGS)
AC_SUBST(MPFR_LDFLAGS)
# what version of mpfr
#==========================================================================================

# Checks for header files.
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_HEADER_TIME
AC_CHECK_HEADERS([fcntl.h float.h inttypes.h limits.h stddef.h stdint.h stdlib.h string.h sys/time.h unistd.h stdio.h])

# Checks for typedefs, structures, and compiler characteristics.
AC_C_INLINE
AC_C_CONST
AC_TYPE_SIZE_T

# Checks for library functions.
AC_FUNC_MALLOC
AC_FUNC_REALLOC
AC_FUNC_VPRINTF
AC_CHECK_FUNCS([gettimeofday memset modf pow stpcpy strchr strdup strerror strrchr strtoul])

AC_CONFIG_FILES([Makefile English.lproj/Makefile])
AC_OUTPUT

